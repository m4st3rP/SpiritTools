buildscript {
    ext.kotlin_version = '1.3.40'
    ext.tornadofx_version = "1.7.19"
    ext.junit_version = "4.11"
    ext.klaxon_version = "5.0.5"
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'application'
    //id 'org.openjfx.javafxplugin' version '0.0.7'
}

apply plugin: 'kotlin'
apply plugin: 'application'
//apply plugin: "org.junit.platform.gradle.plugin"

mainClassName = 'gui.Controller'

defaultTasks 'run'

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "com.beust:klaxon:$klaxon_version"
    compile "no.tornado:tornadofx:$tornadofx_version"

    testCompile "junit:junit:$junit_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

/*jar {
    manifest { attributes 'Main-Class': 'waffe.MainKt' }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}*/

jar {
    manifest {
        attributes(
                "Class-Path": configurations.compile.collect { it.getName() }.join(" "),
                "Main-Class": mainClassName
        )
    }
    from(configurations.compile.collect { entry -> zipTree(entry) }) {
        exclude "META-INF/MANIFEST.MF"
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
        exclude "JSON"
    }
}

//javafx {
//    version = "11.0.2"
//    modules = [ 'javafx.controls' ]
//}